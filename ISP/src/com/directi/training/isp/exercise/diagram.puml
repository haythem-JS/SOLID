@startuml

interface Door 
{ 
    void lock();
    void unlock();
    void open();
    void close();
    void timeOutCallback();
    void proximityCallback();
}

class TimedDoor implements Door
{ 
    - static final int TIME_OUT = 100
    - boolean _locked
    - boolean _opened

    + void TimedDoor(Timer timer)
    + void lock()
    + void unlock()
    + void open()
    + void close()
    + void timeOutCallback()
    + void proximityCallback()
}


class SensingDoor implements Door
{ 
    - boolean _locked
    - boolean _opened

    + void SensingDoor()
    + void lock()
    + void unlock()
    + void open()
    + void close()
    + void timeOutCallback()
    + void proximityCallback()
}
  

class Sensor 
{
    - boolean isPersonClose
    + void register(Door door)
}

class Timer
{
    + void register(long timeOut, final Door door)
}
  
TimedDoor -. Timer
SensingDoor -. Sensor
Timer -. Door
Sensor -. Door

@enduml
